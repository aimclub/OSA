{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"OSA: OPEN-SOURCE ADVISOR","text":""},{"location":"#overview","title":"Overview","text":"<p>OSA (Open-Source-Advisor) is a LLM-based tool for improving the quality of scientific open source projects and helping create them from scratch. It automates the generation of README, different levels of documentation, CI/CD scripts, etc. It also generates advices and recommendations for the repository.</p> <p>OSA is currently under development, so not all features are implemented.</p>"},{"location":"#how-it-works","title":"How it works?","text":"<p>Here is a short video:</p> <p></p>"},{"location":"#table-of-contents","title":"Table of contents","text":"<ul> <li>Core features</li> <li>Installation</li> <li>Getting started</li> <li>Examples</li> <li>Documentation</li> <li>Contributing</li> <li>License</li> <li>Acknowledgments</li> <li>Citation</li> </ul>"},{"location":"#core-features","title":"Core features","text":"<ol> <li> <p>README file generation: Automates the creation of a clear and structured README file for a repository, including    projects based on research papers.</p> </li> <li> <p>Documentation generation: Automatically generates docstrings for Python code.</p> </li> <li> <p>Automatic implementation of changes: Clones the repository, creates a branch, commits and pushes changes, and    creates a pull request with proposed changes.</p> </li> <li> <p>Various LLMs: Use OSA with an LLM accessible via API (e.g., OpenAI, VseGPT, Ollama), a local server, or try    an osa_bot hosted on ITMO servers.</p> </li> </ol>"},{"location":"#installation","title":"Installation","text":"<p>Install Open-Source-Advisor using one of the following methods:</p> <p>Using PyPi:</p> <pre><code>pip install osa_tool\n</code></pre> <p>Build from source:</p> <ol> <li>Clone the Open-Source-Advisor repository:</li> </ol> <pre><code>git clone https://github.com/aimclub/OSA\n</code></pre> <ol> <li>Navigate to the project directory:</li> </ol> <pre><code>cd Open-Source-Advisor\n</code></pre> <ol> <li>Install the project dependencies:</li> </ol> <p>Using <code>pip</code> </p> <pre><code>pip install -r requirements.txt\n</code></pre> <p>Using <code>poetry</code> </p> <pre><code>poetry install \n</code></pre> <p>Using <code>docker</code> </p> <pre><code>docker build --build-arg GIT_USER_NAME=\"your-user-name\" --build-arg GIT_USER_EMAIL=\"your-user-email\" -f docker/Dockerfile -t {image-name} .\n</code></pre>"},{"location":"#getting-started","title":"Getting started","text":""},{"location":"#prerequisites","title":"Prerequisites","text":"<p>OSA requires Python 3.10 or higher.</p> <p>File <code>.env</code> is required to specify GitHub/GitLab/Gitverse token (GIT_TOKEN) and LLM API key (OPENAI_API_KEY or AUTHORIZATION_KEY)</p> <p>When running <code>osa-tool</code> from CLI, you need to set the GIT_TOKEN and API key first:</p> <pre><code># Linux / macOS (bash/zsh)\nexport OPENAI_API_KEY=&lt;your_api_key&gt;\nexport GIT_TOKEN=&lt;your_git_token&gt;\n\n# Windows (PowerShell)\nsetx OPENAI_API_KEY \"&lt;your_api_key&gt;\"\nsetx GIT_TOKEN \"&lt;your_git_token&gt;\"\n</code></pre>"},{"location":"#tokens","title":"Tokens","text":"Token name Description Mandatory <code>GIT_TOKEN</code> Personal GitHub/GitLab/Gitverse token used to clone private repositories, access metadata, and interact with its API. Yes <code>OPENAI_API_KEY</code> API key for accessing OpenAI, vsegpt and openrouter providers No <code>AUTHORIZATION_KEY</code> API key for gigachat provider No <code>X-API-Key</code> API key for the pepy.tech REST API, used to fetch Python package download statistics No"},{"location":"#usage","title":"Usage","text":"<p>Run Open-Source-Advisor using the following command:</p> <p>Using <code>pip</code> </p> <pre><code>python -m osa_tool.run -r {repository} [--api {api}] [--base-url {base_url}] [--model {model_name}] [--article {article}]\n</code></pre> <p>Using <code>docker</code> </p> <pre><code>docker run --env-file .env {image-name} -r {repository} [--api {api}] [--base-url {base_url}] [--model {model_name}] [--article {article}]\n</code></pre> <p>The --article option enables you to choose a README template for a repository based on an article. You can provide either a link to a PDF file of the article or a path to a local PDF file after the --article option. If you are using Docker, ensure that you upload the PDF file to the OSA folder before building the image, then, specify the path as /app/OSA/... or just use volume mounting to access the file.</p> <p>The --generate-workflows option is intended to create customizable CI/CD pipelines for Python repositories. For detailed documentation, see the GitHub Action Workflow Generator README.</p>"},{"location":"#configuration","title":"Configuration","text":"Flag Description Default <code>-r</code>, <code>--repository</code> URL of the GitHub/GitLab/Gitverse repository (Mandatory) <code>-b</code>, <code>--branch</code> Branch name of the repository Default branch <code>-o</code>, <code>--output</code> Path to the output directory Current working directory <code>--api</code> LLM API service provider <code>itmo</code> <code>--base-url</code> URL of the provider compatible with API OpenAI <code>https://api.openai.com/v1</code> <code>--model</code> Specific LLM model to use <code>gpt-3.5-turbo</code> <code>--top_p</code> Nucleus sampling probability <code>None</code> <code>--temperature</code> Sampling temperature to use for the LLM output (0 = deterministic, 1 = creative). <code>None</code> <code>--max_tokens</code> Maximum number of tokens the model can generate in a single response <code>None</code> <code>--article</code> Link to the pdf file of the article <code>None</code> <code>-m</code>, <code>--mode</code> Operation mode for repository processing: <code>basic</code>, <code>auto</code> (default), or <code>advanced</code>. <code>auto</code> <code>--delete-dir</code> Enable deleting the downloaded repository after processing <code>disabled</code> <code>--no-fork</code> Avoid create fork for target repository <code>False</code> <code>--no-pull-request</code> Avoid create pull request for target repository <code>False</code> <p>To learn how to work with the interactive CLI and view descriptions of all available keys, visit the CLI usage guide.</p>"},{"location":"#examples","title":"Examples","text":"<p>Examples of generated README files are available in examples.</p> <p>URL of the GitHub/GitLab/Gitverse repository, LLM API service provider (optional) and Specific LLM model to use (optional) are required to use the generator.</p> <p>Supported LLM providers are available as part of the ProtoLLM ecosystem. See the connectors directory for the full list.</p> <p>Local ITMO model:</p> <pre><code>python -m osa_tool.run -r https://github.com/aimclub/OSA --base_url [ITMO_MODEL_URL]\n</code></pre> <p>For this API provider itmo model url must be specified in dotenv (ITMO_MODEL_URL=) or in the --base-url argument.</p> <p>OpenAI:</p> <pre><code>python -m osa_tool.run -r https://github.com/aimclub/OSA --api openai\n</code></pre> <p>VseGPT:</p> <pre><code>python -m osa_tool.run -r https://github.com/aimclub/OSA --api openai --base-url https://api.vsegpt.ru/v1 --model openai/gpt-3.5-turbo\n</code></pre> <p>Openrouter:</p> <pre><code>python -m osa_tool.run -r https://github.com/aimclub/OSA --api openai --base-url https://openrouter.ai/api/v1 --model qwen/qwen3-30b-a3b-instruct-2507\n</code></pre> <p>Ollama:</p> <pre><code>python -m osa_tool.run -r https://github.com/aimclub/OSA --api ollama --base-url http://[YOUR_OLLAMA_IP]:11434 --model gemma3:27b\n</code></pre>"},{"location":"#documentation","title":"Documentation","text":"<p>Detailed description of OSA API is available here.</p>"},{"location":"#chat-with-developers-osa_helpdesk","title":"Chat with developers: OSA_helpdesk","text":"<p>In our Telegram chat OSA_helpdesk you can ask questions about working with OSA and find the latest news about the project.</p>"},{"location":"#publications-about-osa","title":"Publications about OSA","text":"<p>In English:</p> <ul> <li>Automate Your Coding with OSA \u2013 ITMO-Made AI Assistant for Researchers</li> </ul> <p>In Russian:</p> <ul> <li>OSA: \u0418\u0418-\u043f\u043e\u043c\u043e\u0449\u043d\u0438\u043a \u0434\u043b\u044f \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432 \u043d\u0430\u0443\u0447\u043d\u043e\u0433\u043e open source \u043a\u043e\u0434\u0430</li> </ul>"},{"location":"#contributing","title":"Contributing","text":"<ul> <li>Report Issues: Submit bugs found or log feature requests for the   Open-Source-Advisor project.</li> </ul>"},{"location":"#license","title":"License","text":"<p>This project is protected under the BSD 3-Clause \"New\" or \"Revised\" License. For more details, refer to the LICENSE file.</p>"},{"location":"#acknowledgments","title":"Acknowledgments","text":"<p>The project is supported as ITMO University Research Project in AI Initiative (RPAII).</p> <p>OSA is tested by the members of ITMO OpenSource community. Useful content from community is available in Open-source-ops</p> <p>Also, we thank Readme-ai for their code that we used as a foundation for our own version of README generator.</p>"},{"location":"#citation","title":"Citation","text":"<p>If you use this software, please cite it as below.</p>"},{"location":"#simple-format","title":"Simple format","text":"<pre><code>Nikitin N. et al. An LLM-Powered Tool for Enhancing Scientific Open-Source Repositories // Championing Open-source DEvelopment in ML Workshop@ ICML25.\n</code></pre>"},{"location":"#bibtex-format","title":"BibTeX format","text":"<pre><code>@inproceedings{nikitinllm,\ntitle={An LLM-Powered Tool for Enhancing Scientific Open-Source Repositories},\nauthor={Nikitin, Nikolay and Getmanov, Andrey and Popov, Zakhar and \n    Ulyanova Ekaterina and Aksenkin, Yaroslav and \n    Sokolov, Ilya and Boukhanovsky, Alexander},\nbooktitle={Championing Open-source DEvelopment in ML Workshop@ ICML25}\n</code></pre> <p>}</p>"},{"location":"core/git_agent/git_agent/","title":"GitHub Agent","text":""},{"location":"core/git_agent/git_agent/#osa_tool.git_agent.git_agent.GitAgent","title":"<code>osa_tool.git_agent.git_agent.GitAgent</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Abstract base class for Git platform agents.</p> <p>This class provides functionality to clone repositories, create and checkout branches, commit and push changes, and create pull requests.</p> <p>Attributes:</p> Name Type Description <code>AGENT_SIGNATURE</code> <p>A signature string appended to pull request descriptions.</p> <code>repo_url</code> <p>The URL of the Git repository.</p> <code>clone_dir</code> <p>The directory where the repository will be cloned.</p> <code>branch_name</code> <p>The name of the branch to be created.</p> <code>repo</code> <p>The GitPython Repo object representing the repository.</p> <code>token</code> <p>The Git token for authentication.</p> <code>fork_url</code> <p>The URL of the created fork of a Git repository.</p> <code>metadata</code> <p>Git repository metadata.</p> <code>base_branch</code> <p>The name of the repository's branch.</p> <code>pr_report_body</code> <p>A formatted message for a pull request.</p>"},{"location":"core/git_agent/git_agent/#osa_tool.git_agent.git_agent.GitAgent.__init__","title":"<code>__init__(repo_url, repo_branch_name=None, branch_name='osa_tool')</code>","text":"<p>Initializes the agent with repository info.</p> <p>Parameters:</p> Name Type Description Default <code>repo_url</code> <code>str</code> <p>The URL of the GitHub repository.</p> required <code>repo_branch_name</code> <code>str</code> <p>The name of the repository's branch to be checked out.</p> <code>None</code> <code>branch_name</code> <code>str</code> <p>The name of the branch to be created. Defaults to \"osa_tool\".</p> <code>'osa_tool'</code>"},{"location":"core/git_agent/git_agent/#osa_tool.git_agent.git_agent.GitAgent.clone_repository","title":"<code>clone_repository()</code>","text":"<p>Clones the repository into the specified directory.</p> <p>If the repository already exists locally, it initializes the repository. If the directory exists but is not a valid Git repository, an error is raised.</p> <p>Raises:</p> Type Description <code>InvalidGitRepositoryError</code> <p>If the local directory is not a valid Git repository.</p> <code>GitCommandError</code> <p>If cloning the repository fails.</p>"},{"location":"core/git_agent/git_agent/#osa_tool.git_agent.git_agent.GitAgent.commit_and_push_changes","title":"<code>commit_and_push_changes(branch=None, commit_message='osa_tool recommendations', force=False)</code>","text":"<p>Commits and pushes changes to the forked repository.</p> <p>Parameters:</p> Name Type Description Default <code>branch</code> <code>str</code> <p>The name of the branch to push changes to. Defaults to <code>branch_name</code>.</p> <code>None</code> <code>commit_message</code> <code>str</code> <p>The commit message. Defaults to \"osa_tool recommendations\".</p> <code>'osa_tool recommendations'</code> <code>force</code> <code>bool</code> <p>Option to force push the commit. Defaults to <code>False</code></p> <code>False</code>"},{"location":"core/git_agent/git_agent/#osa_tool.git_agent.git_agent.GitAgent.create_and_checkout_branch","title":"<code>create_and_checkout_branch(branch=None)</code>","text":"<p>Creates and checks out a new branch.</p> <p>If the branch already exists, it simply checks out the branch.</p> <p>Parameters:</p> Name Type Description Default <code>branch</code> <code>str</code> <p>The name of the branch to create or check out. Defaults to <code>branch_name</code>.</p> <code>None</code>"},{"location":"core/git_agent/git_agent/#osa_tool.git_agent.git_agent.GitAgent.create_fork","title":"<code>create_fork()</code>  <code>abstractmethod</code>","text":"<p>Create a fork of the repository.</p>"},{"location":"core/git_agent/git_agent/#osa_tool.git_agent.git_agent.GitAgent.create_pull_request","title":"<code>create_pull_request(title=None, body=None)</code>  <code>abstractmethod</code>","text":"<p>Create a pull request / merge request on the platform.</p> <p>Parameters:</p> Name Type Description Default <code>title</code> <code>str</code> <p>The title of the PR. If None, the commit message will be used.</p> <code>None</code> <code>body</code> <code>str</code> <p>The body/description of the PR. If None, the commit message with agent signature will be used.</p> <code>None</code>"},{"location":"core/git_agent/git_agent/#osa_tool.git_agent.git_agent.GitAgent.star_repository","title":"<code>star_repository()</code>  <code>abstractmethod</code>","text":"<p>Star the repository on the platform.</p>"},{"location":"core/git_agent/git_agent/#osa_tool.git_agent.git_agent.GitAgent.update_about_section","title":"<code>update_about_section(about_content)</code>","text":"<p>Tries to update the 'About' section of the base and fork repository with the provided content.</p> <p>Parameters:</p> Name Type Description Default <code>about_content</code> <code>dict</code> <p>Dictionary containing the metadata to update about section.</p> required <p>Raises:</p> Type Description <code>ValueError</code> <p>If the Git token is not set or inappropriate platform used.</p>"},{"location":"core/git_agent/git_agent/#osa_tool.git_agent.git_agent.GitAgent.upload_report","title":"<code>upload_report(report_filename, report_filepath, report_branch='osa_tool_attachments', commit_message='docs: upload pdf report')</code>","text":"<p>Uploads the generated PDF report to a separate branch.</p> <p>Parameters:</p> Name Type Description Default <code>report_filename</code> <code>str</code> <p>Name of the report file.</p> required <code>report_filepath</code> <code>str</code> <p>Path to the report file.</p> required <code>report_branch</code> <code>str</code> <p>Name of the branch for storing reports. Defaults to \"osa_tool_attachments\".</p> <code>'osa_tool_attachments'</code> <code>commit_message</code> <code>str</code> <p>Commit message for the report upload. Defaults to \"upload pdf report\".</p> <code>'docs: upload pdf report'</code>"},{"location":"core/git_agent/git_agent/#osa_tool.git_agent.git_agent.GitAgent.validate_topics","title":"<code>validate_topics(topics)</code>  <code>abstractmethod</code>","text":"<p>Validates topics against platform-specific APIs.</p> <p>Parameters:</p> Name Type Description Default <code>topics</code> <code>List[str]</code> <p>List of potential topics to validate</p> required <p>Returns:</p> Type Description <code>List[str]</code> <p>List[str]: List of validated topics that exist on platform</p>"},{"location":"core/models/models/","title":"Model Handler","text":""},{"location":"core/models/models/#osa_tool.models.models.ModelHandler","title":"<code>osa_tool.models.models.ModelHandler</code>","text":"<p>               Bases: <code>ABC</code></p> <p>This class handles the sending of requests to a specified URL and the initialization of payloads for instances.</p> <p>Methods:</p> Name Description <code>send_request</code> <p>Sends a request to a specified URL and returns the response. The response is of type requests.Response.</p> <code>initialize_payload</code> <p>Initializes the payload for the instance using the provided configuration and prompt. The payload is generated using the payloadFactory and is then converted to payload completions and stored in the instance's payload attribute. The method takes two arguments: config which are the configuration settings to be used for payload generation, and prompt which is the prompt to be used for payload generation. The method does not return anything.</p>"},{"location":"core/models/models/#osa_tool.models.models.ModelHandler.initialize_payload","title":"<code>initialize_payload(config, prompt)</code>","text":"<p>Initializes the payload for the instance.</p> <p>This method uses the provided configuration and prompt to generate a payload using the payloadFactory. The generated payload is then converted to payload completions and stored in the instance's payload attribute.</p> <p>Parameters:</p> Name Type Description Default <code>config</code> <code>Settings</code> <p>The configuration settings to be used for payload generation.</p> required <code>prompt</code> <code>str</code> <p>The prompt to be used for payload generation.</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"core/osatreesitter/docgen/","title":"Documentation Generator","text":""},{"location":"core/osatreesitter/docgen/#osa_tool.osatreesitter.docgen.DocGen","title":"<code>osa_tool.osatreesitter.docgen.DocGen</code>","text":"<p>               Bases: <code>object</code></p> <p>This class is a utility for generating Python docstrings using OpenAI's GPT model. It includes methods for generating docstrings for a class, a single method, formatting the structure of Python files, counting the number of tokens in a given prompt, extracting the docstring from GPT's response, inserting a generated docstring into the source code and also processing a Python file by generating and inserting missing docstrings.</p>"},{"location":"core/osatreesitter/docgen/#osa_tool.osatreesitter.docgen.DocGen.__init__","title":"<code>__init__(config_loader)</code>","text":"<p>Instantiates the object of the class.</p> <p>This method is a constructor that initializes the object by setting the 'api_key' attribute to the value of the 'OPENAI_API_KEY' environment variable.</p>"},{"location":"core/osatreesitter/docgen/#osa_tool.osatreesitter.docgen.DocGen.context_extractor","title":"<code>context_extractor(method_details, structure)</code>","text":"<pre><code>Extracts the context of method calls and functions from given method_details and code structure.\n\nParameters:\n- method_details: A dictionary containing details about the method calls.\n- structure: A dictionary representing the code structure.\n\nReturns:\nA string containing the context of the method calls and functions in the format:\n- If a method call is found:\n  \"# Method {method_name} in class {class_name}\n</code></pre> <p>{source_code}\"     - If a function call is found:       \"# Function {class_name} {source_code}\"</p> <pre><code>Note:\n- This method iterates over the method calls in method_details and searches for the corresponding methods and functions\n  in the code structure. It constructs the context of the found methods and functions by appending their source code\n  along with indicator comments.\n- The returned string contains the structured context of all the detected methods and functions.\n</code></pre>"},{"location":"core/osatreesitter/docgen/#osa_tool.osatreesitter.docgen.DocGen.count_tokens","title":"<code>count_tokens(prompt)</code>","text":"<p>Counts the number of tokens in a given prompt using a specified model.</p> <p>Parameters:</p> Name Type Description Default <code>prompt</code> <code>str</code> <p>The text for which to count the tokens.</p> required <p>Returns:</p> Type Description <code>int</code> <p>The number of tokens in the prompt.</p>"},{"location":"core/osatreesitter/docgen/#osa_tool.osatreesitter.docgen.DocGen.create_mkdocs_git_workflow","title":"<code>create_mkdocs_git_workflow(repository_url, path)</code>","text":"<p>Generates .yaml documentation deploy workflow for chosen git host service.</p> <p>Parameters:</p> Name Type Description Default <code>repository_url</code> <code>str</code> <p>str - URI of the Python project's repository on GitHub.</p> required <code>path</code> <code>str</code> <p>str - The path to the root directory of the Python project.</p> required <p>Returns:</p> Type Description <code>None</code> <p>None. The method generates workflow for MkDocs documentation of a current project.</p>"},{"location":"core/osatreesitter/docgen/#osa_tool.osatreesitter.docgen.DocGen.extract_pure_docstring","title":"<code>extract_pure_docstring(gpt_response)</code>  <code>staticmethod</code>","text":"<p>Extracts only the docstring from the GPT response while keeping triple quotes. Handles common formatting issues like Markdown blocks, extra indentation, and missing closing quotes.</p> <p>Parameters:</p> Name Type Description Default <code>gpt_response</code> <code>str</code> <p>Full response string from LLM.</p> required <p>Returns:</p> Type Description <code>str</code> <p>A properly formatted Python docstring string with triple quotes.</p>"},{"location":"core/osatreesitter/docgen/#osa_tool.osatreesitter.docgen.DocGen.format_structure_openai","title":"<code>format_structure_openai(structure)</code>  <code>staticmethod</code>","text":"<p>Formats the structure of Python files in a readable string format.</p> <p>This method iterates over the given dictionary 'structure' and generates a formatted string where it describes each file, its classes and functions along with their details such as line number, arguments, return type, source code and docstrings if available.</p> <p>Parameters:</p> Name Type Description Default <code>structure</code> <code>dict</code> <p>A dictionary containing details of the Python files structure. The dictionary should</p> required <p>Returns:</p> Type Description <code>str</code> <p>A formatted string representing the structure of the Python files.</p>"},{"location":"core/osatreesitter/docgen/#osa_tool.osatreesitter.docgen.DocGen.format_with_black","title":"<code>format_with_black(filename)</code>","text":"<p>Formats a Python source code file using the <code>black</code> code formatter.</p> <p>This method takes a filename as input and formats the code in the specified file using the <code>black</code> code formatter.</p> <p>Parameters:</p> Name Type Description Default <code>- filename</code> <p>The path to the Python source code file to be formatted.</p> required <p>Returns:</p> Type Description <p>None</p>"},{"location":"core/osatreesitter/docgen/#osa_tool.osatreesitter.docgen.DocGen.generate_class_documentation","title":"<code>generate_class_documentation(class_details, semaphore)</code>  <code>async</code>","text":"<p>Generate documentation for a class.</p> <p>Parameters:</p> Name Type Description Default <code>class_details</code> <code>list</code> <p>A list of dictionaries containing method names and their docstrings.</p> required <code>semaphore</code> <code>Semaphore</code> <p>synchronous primitive that implements limitation of concurrency degree to avoid overloading api.</p> required"},{"location":"core/osatreesitter/docgen/#osa_tool.osatreesitter.docgen.DocGen.generate_documentation_mkdocs","title":"<code>generate_documentation_mkdocs(path, files_info, modules_info)</code>","text":"<p>Generates MkDocs documentation for a Python project based on provided path.</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>str</code> <p>str - The path to the root directory of the Python project.</p> required <p>Returns:</p> Type Description <code>None</code> <p>None. The method generates MkDocs documentation for the project.</p>"},{"location":"core/osatreesitter/docgen/#osa_tool.osatreesitter.docgen.DocGen.generate_method_documentation","title":"<code>generate_method_documentation(method_details, semaphore, context_code=None)</code>  <code>async</code>","text":"<p>Generate documentation for a single method.</p>"},{"location":"core/osatreesitter/docgen/#osa_tool.osatreesitter.docgen.DocGen.insert_cls_docstring_in_code","title":"<code>insert_cls_docstring_in_code(source_code, class_name, generated_docstring)</code>  <code>staticmethod</code>","text":"<p>Inserts or replaces a class-level docstring for a given class name.</p> <p>Parameters:</p> Name Type Description Default <code>source_code</code> <code>str</code> <p>The full source code string.</p> required <code>class_name</code> <code>str</code> <p>Name of the class to update.</p> required <code>generated_docstring</code> <code>str</code> <p>The new docstring (raw response from LLM).</p> required <p>Returns:</p> Type Description <code>str</code> <p>Updated source code with the inserted or replaced class docstring.</p>"},{"location":"core/osatreesitter/docgen/#osa_tool.osatreesitter.docgen.DocGen.insert_docstring_in_code","title":"<code>insert_docstring_in_code(source_code, method_details, generated_docstring, class_method=False)</code>  <code>staticmethod</code>","text":"<p>Inserts or replaces a method-level docstring in the provided source code, using the method's body from method_details['source_code'] to locate the method. Handles multi-line signatures, decorators, async definitions, and existing docstrings.</p>"},{"location":"core/osatreesitter/docgen/#osa_tool.osatreesitter.docgen.DocGen.strip_docstring_from_body","title":"<code>strip_docstring_from_body(body)</code>  <code>staticmethod</code>","text":"<p>Method to trimm method's body from docstring</p>"},{"location":"core/osatreesitter/docgen/#osa_tool.osatreesitter.docgen.DocGen.summarize_submodules","title":"<code>summarize_submodules(project_structure, rate_limit=20)</code>  <code>async</code>","text":"<p>This method performs recursive traversal over given parsed structure of a Python codebase and generates short summaries for each directory (submodule).</p> <p>Parameters:</p> Name Type Description Default <code>project_structure</code> <p>A dictionary representing the parsed structure of the Python codebase. The dictionary keys are filenames and the values are lists of dictionaries representing classes and their methods.</p> required <code>rate_limit</code> <code>int</code> <p>A number of maximum concurrent requests to provided API</p> <code>20</code>"},{"location":"core/osatreesitter/docgen/#osa_tool.osatreesitter.docgen.DocGen.update_class_documentation","title":"<code>update_class_documentation(class_details, semaphore)</code>  <code>async</code>","text":"<p>Generate documentation for a class.</p> <p>Parameters:</p> Name Type Description Default <code>class_details</code> <code>list</code> <p>A list of dictionaries containing method names and their docstrings.</p> required <code>semaphore</code> <code>Semaphore</code> <p>synchronous primitive that implements limitation of concurrency degree to avoid overloading api.</p> required"},{"location":"core/osatreesitter/docgen/#osa_tool.osatreesitter.docgen.DocGen.update_method_documentation","title":"<code>update_method_documentation(method_details, semaphore, context_code=None, class_name=None)</code>  <code>async</code>","text":"<p>Generate documentation for a single method.</p>"},{"location":"core/osatreesitter/osatreesitter/","title":"OSA Tree Sitter","text":""},{"location":"core/osatreesitter/osatreesitter/#osa_tool.osatreesitter.osa_treesitter.OSA_TreeSitter","title":"<code>osa_tool.osatreesitter.osa_treesitter.OSA_TreeSitter</code>","text":"<p>               Bases: <code>object</code></p> <p>Class for the extraction of the source code's structure to be processed later by LLM.</p> <p>Attributes:</p> Name Type Description <code>cwd</code> <p>A current working directory with source code files.</p>"},{"location":"core/osatreesitter/osatreesitter/#osa_tool.osatreesitter.osa_treesitter.OSA_TreeSitter.__init__","title":"<code>__init__(scripts_path)</code>","text":"<p>Initialization of the instance based on the provided path to the scripts.</p> <p>Parameters:</p> Name Type Description Default <code>scripts_path</code> <code>str</code> <p>provided by user path to the scripts.</p> required"},{"location":"core/osatreesitter/osatreesitter/#osa_tool.osatreesitter.osa_treesitter.OSA_TreeSitter.analyze_directory","title":"<code>analyze_directory(path)</code>","text":"<p>Method analyzes provided directory.</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>str</code> <p>provided by user path to the scripts.</p> required <p>Returns:</p> Type Description <code>dict</code> <p>Dictionary containing a filename and its source code's structure.</p>"},{"location":"core/osatreesitter/osatreesitter/#osa_tool.osatreesitter.osa_treesitter.OSA_TreeSitter.extract_structure","title":"<code>extract_structure(filename)</code>","text":"<p>Method extracts the structure of the occured file in the provided directory.</p> <p>Parameters:</p> Name Type Description Default <code>filename</code> <code>str</code> <p>name of the file occured in the provided directory.</p> required <p>Returns:</p> Type Description <code>list</code> <p>List containing occuring in file functions, classes, their start lines and methods</p>"},{"location":"core/osatreesitter/osatreesitter/#osa_tool.osatreesitter.osa_treesitter.OSA_TreeSitter.files_list","title":"<code>files_list(path)</code>  <code>staticmethod</code>","text":"<p>Method provides a list of files occuring in the provided path.</p> <p>If user provided a path to a file with a particular extension the method returns a corresponding status which will trigger inner \"_if_file_handler\" method to cut the path's tail.</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>str</code> <p>provided by user path to the scripts.</p> required <p>Returns:</p> Type Description <code>tuple[list, 0] | tuple[list[str], 1]</code> <p>A tuple containing a list of files in the provided directory</p> <code>tuple[list, 0] | tuple[list[str], 1]</code> <p>and status for a specific file usecase. Statuses:</p> <code>tuple[list, 0] | tuple[list[str], 1]</code> <p>0 - a directory was provided</p> <code>tuple[list, 0] | tuple[list[str], 1]</code> <p>1 - a path to the specific file was provided.</p>"},{"location":"core/osatreesitter/osatreesitter/#osa_tool.osatreesitter.osa_treesitter.OSA_TreeSitter.log_results","title":"<code>log_results(results)</code>","text":"<p>Method logs the results of the directory analyze into \"examples/report.txt\".</p> <p>Parameters:</p> Name Type Description Default <code>results</code> <code>dict</code> <p>dictionary containing a filename and its source code's structure.</p> required"},{"location":"core/osatreesitter/osatreesitter/#osa_tool.osatreesitter.osa_treesitter.OSA_TreeSitter.open_file","title":"<code>open_file(file)</code>  <code>staticmethod</code>","text":"<p>Method reads the content of the occured file.</p> <p>Parameters:</p> Name Type Description Default <code>file</code> <code>str</code> <p>file occured in the provided directory.</p> required <p>Returns:</p> Type Description <code>str</code> <p>Read content.</p>"},{"location":"core/osatreesitter/osatreesitter/#osa_tool.osatreesitter.osa_treesitter.OSA_TreeSitter.show_results","title":"<code>show_results(results)</code>","text":"<p>Method logs out the results of the directory analyze.</p> <p>Parameters:</p> Name Type Description Default <code>results</code> <code>dict</code> <p>dictionary containing a filename and its source code's structure.</p> required"}]}